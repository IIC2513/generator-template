name: Build and test package

on:
  push:
    branches: [ dev ]
  pull_request:
    branches: [ dev ]

jobs:
  build_generator:
    name: Build and test generator
    runs-on: ubuntu-latest
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    strategy:
      matrix:
        node-version: [10.x, 12.x]

    steps:
    - name: Checkout project
      uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Load yarn cache
      uses: actions/cache@v1
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-

    - name: Install dependencies
      run: yarn install

    - name: Run linter
      run: yarn lint

    - name: Run tests
      run: yarn test

  create_project:
    name: Create project and test it
    runs-on: ubuntu-latest
    needs: build_generator
    if: "!contains(github.event.head_commit.message, '[skip ci]')"

    strategy:
      matrix:
        node-version: [10.x, 12.x]

    steps:
    - name: Checkout project
      uses: actions/checkout@v2

    - name: Use Node.js ${{ matrix.node-version }}
      uses: actions/setup-node@v1
      with:
        node-version: ${{ matrix.node-version }}

    - name: Link project
      run: npm link

    - name: Install Yeoman globally
      run: npm -g install yo

    - name: Get yarn cache directory path
      id: yarn-cache-dir-path
      run: echo "::set-output name=dir::$(yarn cache dir)"

    - name: Load yarn cache
      uses: actions/cache@v1
      id: yarn-cache
      with:
        path: ${{ steps.yarn-cache-dir-path.outputs.dir }}
        key: ${{ runner.os }}-yarn-template-${{ hashFiles('**/yarn.lock') }}
        restore-keys: |
          ${{ runner.os }}-yarn-template-

    - name: Create project
      working-directory: ../
      run: yo @iic2513/template my-project --installDependencies

    - name: Run linter
      working-directory: ../my-project
      run: yarn lint

    - name: Run tests
      working-directory: ../my-project
      run: yarn test
